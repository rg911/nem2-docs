/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


export class MosaicDTO {
    /**
    * Mosaic identifier.
    */
    'id': string;
    /**
    * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
    */
    'supply': string;
    /**
    * Height of the blockchain.
    */
    'startHeight': string;
    'ownerPublicKey': string;
    'ownerAddress': string;
    /**
    * Number of definitions for the same mosaic.
    */
    'revision': number;
    /**
    * - 0x00 (none) - No flags present. - 0x01 (supplyMutable) - Mosaic supports supply changes even when mosaic owner owns partial supply. - 0x02 (transferable) - Mosaic supports transfers between arbitrary accounts. When not set, mosaic can only be transferred to and from mosaic owner. - 0x04 (restrictable) - Mosaic supports custom restrictions configured by mosaic owner. 
    */
    'flags': number;
    /**
    * Determines up to what decimal place the mosaic can be divided. Divisibility of 3 means that a mosaic can be divided into smallest parts of 0.001 mosaics. The divisibility must be in the range of 0 and 6. 
    */
    'divisibility': number;
    /**
    * Duration expressed in number of blocks.
    */
    'duration': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "supply",
            "baseName": "supply",
            "type": "string"
        },
        {
            "name": "startHeight",
            "baseName": "startHeight",
            "type": "string"
        },
        {
            "name": "ownerPublicKey",
            "baseName": "ownerPublicKey",
            "type": "string"
        },
        {
            "name": "ownerAddress",
            "baseName": "ownerAddress",
            "type": "string"
        },
        {
            "name": "revision",
            "baseName": "revision",
            "type": "number"
        },
        {
            "name": "flags",
            "baseName": "flags",
            "type": "number"
        },
        {
            "name": "divisibility",
            "baseName": "divisibility",
            "type": "number"
        },
        {
            "name": "duration",
            "baseName": "duration",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return MosaicDTO.attributeTypeMap;
    }
}

