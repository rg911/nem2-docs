/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST Endpoints
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.19
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AggregateTransactionBodyDTO } from './aggregateTransactionBodyDTO';
import { CosignatureDTO } from './cosignatureDTO';
import { EmbeddedTransactionInfoDTO } from './embeddedTransactionInfoDTO';
import { TransactionDTO } from './transactionDTO';

/**
* Transaction to combine multiple transactions together.
*/
export class AggregateBondedTransactionDTO {
    /**
    * Entity\'s signature generated by the signer.
    */
    'signature': string;
    'signerPublicKey': string;
    /**
    * Entity version. The higher byte represents the network identifier: * 0x68 (MAIN_NET) - Public main network. * 0x98 (TEST_NET) - Public test network. * 0x60 (MIJIN) - Private network. * 0x90 (MIJIN_TEST) - Private test network. 
    */
    'version': number;
    'type': number;
    /**
    * Absolute amount. An amount of 123456789 (absolute) for a mosaic with divisibility 6 means 123.456789 (relative).
    */
    'maxFee': string;
    /**
    * Duration expressed in number of blocks.
    */
    'deadline': string;
    /**
    * Array of transaction cosignatures.
    */
    'cosignatures': Array<CosignatureDTO>;
    /**
    * Array of transactions initiated by different accounts.
    */
    'transactions': Array<EmbeddedTransactionInfoDTO>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "signature",
            "baseName": "signature",
            "type": "string"
        },
        {
            "name": "signerPublicKey",
            "baseName": "signerPublicKey",
            "type": "string"
        },
        {
            "name": "version",
            "baseName": "version",
            "type": "number"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "number"
        },
        {
            "name": "maxFee",
            "baseName": "maxFee",
            "type": "string"
        },
        {
            "name": "deadline",
            "baseName": "deadline",
            "type": "string"
        },
        {
            "name": "cosignatures",
            "baseName": "cosignatures",
            "type": "Array<CosignatureDTO>"
        },
        {
            "name": "transactions",
            "baseName": "transactions",
            "type": "Array<EmbeddedTransactionInfoDTO>"
        }    ];

    static getAttributeTypeMap() {
        return AggregateBondedTransactionDTO.attributeTypeMap;
    }
}

