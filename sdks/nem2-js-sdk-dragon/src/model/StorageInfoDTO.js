/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Catapult REST API Reference
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The StorageInfoDTO model module.
* @module model/StorageInfoDTO
* @version 0.7.15
*/
export default class StorageInfoDTO {
    /**
    * Constructs a new <code>StorageInfoDTO</code>.
    * @alias module:model/StorageInfoDTO
    * @class
    * @param numBlocks {Number} The number of blocks stored.
    * @param numTransactions {Number} The number of transactions stored.
    * @param numAccounts {Number} The number of accounts created.
    */

    constructor(numBlocks, numTransactions, numAccounts) {
        

        
        

        this['numBlocks'] = numBlocks;this['numTransactions'] = numTransactions;this['numAccounts'] = numAccounts;

        
    }

    /**
    * Constructs a <code>StorageInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/StorageInfoDTO} obj Optional instance to populate.
    * @return {module:model/StorageInfoDTO} The populated <code>StorageInfoDTO</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StorageInfoDTO();

            
            
            

            if (data.hasOwnProperty('numBlocks')) {
                obj['numBlocks'] = ApiClient.convertToType(data['numBlocks'], 'Number');
            }
            if (data.hasOwnProperty('numTransactions')) {
                obj['numTransactions'] = ApiClient.convertToType(data['numTransactions'], 'Number');
            }
            if (data.hasOwnProperty('numAccounts')) {
                obj['numAccounts'] = ApiClient.convertToType(data['numAccounts'], 'Number');
            }
        }
        return obj;
    }

    /**
    * The number of blocks stored.
    * @member {Number} numBlocks
    */
    numBlocks = undefined;
    /**
    * The number of transactions stored.
    * @member {Number} numTransactions
    */
    numTransactions = undefined;
    /**
    * The number of accounts created.
    * @member {Number} numAccounts
    */
    numAccounts = undefined;








}


