/*
 * Copyright 2019 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Catapult REST API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.15
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.RolesTypeEnum;

/**
 * NodeInfoDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-06-20T19:56:23.892+01:00[Europe/London]")
public class NodeInfoDTO {
  public static final String SERIALIZED_NAME_PUBLIC_KEY = "publicKey";
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  private String publicKey;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_NETWORK_IDENTIFIER = "networkIdentifier";
  @SerializedName(SERIALIZED_NAME_NETWORK_IDENTIFIER)
  private Integer networkIdentifier;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_ROLES = "roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  private RolesTypeEnum roles;

  public static final String SERIALIZED_NAME_HOST = "host";
  @SerializedName(SERIALIZED_NAME_HOST)
  private String host;

  public static final String SERIALIZED_NAME_FRIENDLY_NAME = "friendlyName";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_NAME)
  private String friendlyName;

  public NodeInfoDTO publicKey(String publicKey) {
    this.publicKey = publicKey;
    return this;
  }

   /**
   * The public key used to identify the node.
   * @return publicKey
  **/
  @ApiModelProperty(example = "EB6839C7E6BD0031FDD5F8CB5137E9BC950D7EE7756C46B767E68F3F58C24390", required = true, value = "The public key used to identify the node.")
  public String getPublicKey() {
    return publicKey;
  }

  public void setPublicKey(String publicKey) {
    this.publicKey = publicKey;
  }

  public NodeInfoDTO port(Integer port) {
    this.port = port;
    return this;
  }

   /**
   * The port used for the communication.
   * @return port
  **/
  @ApiModelProperty(example = "7900", required = true, value = "The port used for the communication.")
  public Integer getPort() {
    return port;
  }

  public void setPort(Integer port) {
    this.port = port;
  }

  public NodeInfoDTO networkIdentifier(Integer networkIdentifier) {
    this.networkIdentifier = networkIdentifier;
    return this;
  }

   /**
   * Get networkIdentifier
   * @return networkIdentifier
  **/
  @ApiModelProperty(example = "144", required = true, value = "")
  public Integer getNetworkIdentifier() {
    return networkIdentifier;
  }

  public void setNetworkIdentifier(Integer networkIdentifier) {
    this.networkIdentifier = networkIdentifier;
  }

  public NodeInfoDTO version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * The version of the application.
   * @return version
  **/
  @ApiModelProperty(example = "0", required = true, value = "The version of the application.")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }

  public NodeInfoDTO roles(RolesTypeEnum roles) {
    this.roles = roles;
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(required = true, value = "")
  public RolesTypeEnum getRoles() {
    return roles;
  }

  public void setRoles(RolesTypeEnum roles) {
    this.roles = roles;
  }

  public NodeInfoDTO host(String host) {
    this.host = host;
    return this;
  }

   /**
   * The IP address of the endpoint.
   * @return host
  **/
  @ApiModelProperty(example = "127.0.0.1", required = true, value = "The IP address of the endpoint.")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public NodeInfoDTO friendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
    return this;
  }

   /**
   * The name of the node.
   * @return friendlyName
  **/
  @ApiModelProperty(example = "api-node-0", required = true, value = "The name of the node.")
  public String getFriendlyName() {
    return friendlyName;
  }

  public void setFriendlyName(String friendlyName) {
    this.friendlyName = friendlyName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NodeInfoDTO nodeInfoDTO = (NodeInfoDTO) o;
    return Objects.equals(this.publicKey, nodeInfoDTO.publicKey) &&
        Objects.equals(this.port, nodeInfoDTO.port) &&
        Objects.equals(this.networkIdentifier, nodeInfoDTO.networkIdentifier) &&
        Objects.equals(this.version, nodeInfoDTO.version) &&
        Objects.equals(this.roles, nodeInfoDTO.roles) &&
        Objects.equals(this.host, nodeInfoDTO.host) &&
        Objects.equals(this.friendlyName, nodeInfoDTO.friendlyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicKey, port, networkIdentifier, version, roles, host, friendlyName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NodeInfoDTO {\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    networkIdentifier: ").append(toIndentedString(networkIdentifier)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    friendlyName: ").append(toIndentedString(friendlyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

